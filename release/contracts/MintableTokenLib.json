{
  "contractName": "MintableTokenLib",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "db",
          "type": "TokenStorage"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "db",
          "type": "TokenStorage"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint8"
        },
        {
          "name": "r",
          "type": "bytes32"
        },
        {
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "db",
          "type": "TokenStorage"
        },
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Simple ERC20 Token example, with mintable token creationIssue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120 Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\",\"kind\":\"dev\",\"methods\":{\"burn(TokenStorage,address,uint256)\":{\"details\":\"Burns tokens.\",\"params\":{\"amount\":\"The amount of tokens to burn.\",\"db\":\"Token storage to operate on.\",\"from\":\"The address holding tokens.\"}},\"burn(TokenStorage,address,uint256,bytes32,uint8,bytes32,bytes32)\":{\"details\":\"Burns tokens from a specific address. To burn the tokens the caller needs to provide a signature proving that the caller is authorized by the token owner to do so.\",\"params\":{\"amount\":\"The amount of tokens to burn.\",\"db\":\"Token storage to operate on.\",\"from\":\"The address holding tokens.\",\"h\":\"Hash which the token owner signed.\",\"r\":\"Signature component.\",\"s\":\"Sigature component.\",\"v\":\"Signature component.\"}},\"mint(TokenStorage,address,uint256)\":{\"details\":\"Mints new tokens.\",\"params\":{\"amount\":\"The amount of tokens to mint.\",\"db\":\"Token storage to operate on.\",\"to\":\"The address that will recieve the minted tokens.\"}}},\"title\":\"Mintable token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MintableTokenLib.sol\":\"MintableTokenLib\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]},\"project:/contracts/ERC20Lib.sol\":{\"keccak256\":\"0xc837cfee9b6b1f10a1065c5dff89570c0a83ea045e0a6846799d3d9405512b0a\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://d47b69caaef3814ac43baa15013696210411af786f9531c1110358ba62555d83\",\"dweb:/ipfs/QmTPXkfNved7J6Wk58d5GVJLgBYzKcdTURC9gPoz6zRsoi\"]},\"project:/contracts/MintableTokenLib.sol\":{\"keccak256\":\"0x7125c11ecfe67a3f5de6c7070ccfb4b16762b5d6b3bb774e35d10453a15e42d5\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://89f213e78368df9d4a03c3bb115047c1d93c211dee392b8f85d6af1c43f9c480\",\"dweb:/ipfs/QmZ3o15fdqZn1eZfUSgyhVtEkk9DPTJbKYvtJiyMqwWzBB\"]},\"project:/contracts/TokenStorage.sol\":{\"keccak256\":\"0x0b7c74024a921e5059664947ccdd5f53acc7c002e950c2ae0c65c910254387a5\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://0206cdaf6eb7bf0abcd597a8983554e7d1e60bda5b0cb1da9c5912a615be6cc5\",\"dweb:/ipfs/QmfVsjM995WSEL7ebEqWCfXePgzS1aWtr4ArTPPcMPrDr9\"]},\"project:/contracts/TokenStorageLib.sol\":{\"keccak256\":\"0xedf1a374019b821fab804f4ae3a0e910304a678ab9f60ca2d9b0b8f60ef5684a\",\"license\":\"apache-2.0\",\"urls\":[\"bzz-raw://400d7c69282e0b759c800065674ac95d26131936d916db22fb3aac0e7c1a836a\",\"dweb:/ipfs/QmYJt58sYYGfahujyRDCUxn8XXQcvqMe6jwKnpt2rFAJZf\"]},\"project:/contracts/ownership/CanReclaimToken.sol\":{\"keccak256\":\"0x108e55b7d2d50484b7bf5699b1e0b27b29dcd633c8651ea8ca14e0f805f4d2f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49bd1fbc3055642b7150e0616d5add5d19e292dee5bc4fa7a0e5865ee1dc4fe3\",\"dweb:/ipfs/Qme4kZKkizviTR3VjadY7rftSX9UV8pqJB7euV9udVVSVF\"]},\"project:/contracts/ownership/Claimable.sol\":{\"keccak256\":\"0x8e75f21c880f9fa7fa382f5082a1a21bfbfbacad1dd891ed8938ebc31d0d39f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e36385dd2c6c12302dd0b845b501a1a42dc3832ef7d038450a472c112ea272\",\"dweb:/ipfs/QmeFJQKneZXfRJ5hyPTNBc95nLP9ix5n87CuApbHgb7hWb\"]},\"project:/contracts/ownership/HasNoContracts.sol\":{\"keccak256\":\"0x4b56f82527c084cec1ded0d6ce4161615d7e9448b49c904278647701afb89015\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e41dc4c6173f707be7020e600622caaf6461851917b2b1a989d41c74c620e49\",\"dweb:/ipfs/QmR286HLknD5ozrEJcy5tFQunwwe6SBh8tLkr97hPnzu7N\"]},\"project:/contracts/ownership/HasNoEther.sol\":{\"keccak256\":\"0x40c5b0c6c8d908bc764cdcce514c824ce842411f43180111de7d0a75e6ae553e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de45edfc949d8922e1c9f07af298c29edabeb26454d8a2eb093a81b32474d610\",\"dweb:/ipfs/QmZyqeY8y8h6XQ23h2rzpr6bVEa7FCCCu7XwTa8fcJc4cY\"]},\"project:/contracts/ownership/HasNoTokens.sol\":{\"keccak256\":\"0x25be2e066915369ead9f26824c8d22d9523c70cddee5369b092e49503c2ec088\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52b009a1d8c7a465a81667d691b50301de052b969e05be7bd30a0c5f6846b82\",\"dweb:/ipfs/Qmcsk6qNq9Hy8WYagLQHFrvDYr5783sX4omUWkAeUSXtzy\"]},\"project:/contracts/ownership/NoOwner.sol\":{\"keccak256\":\"0xf0625c71482671d551c3322ea3ab9eceedd2ec0bdbfdb12de13f27a3fffd38b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f0d1ddbbd28155e759df54b2afad17c440b76bae1d66259679ff53b0aca8e81\",\"dweb:/ipfs/QmXdXPDuW2VDBB7YWoms55rb883noVFJXixKoR1namrwJR\"]},\"project:/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x0041c7f55b3f5b57b5fd6d3eec14573596c5f0d59ce8802e08dae01ed6ff7603\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21935211244e684ccbbd0858a4e2194a41c1b3bb36760bbbe4be4b11a63dd4cb\",\"dweb:/ipfs/Qmbw5C8ZJgA4jRPVP3rqohQb7f72YtUGgBg4eMqX3u56Rv\"]},\"project:/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x54484484f83afe433e6bc50c0003d99c5e877747a783581500a25df8ce7017dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85c97b9279681e06af93f38223117d3351acbe205ed8a47d33c650149ef09bb2\",\"dweb:/ipfs/QmYAcawJZ5tH9e6Syno9fejaaNdpzXbjtWQUhKZyA86g5d\"]},\"project:/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa4c3829e43d20517869a6555f80977d4e582ae439b6b7c5013960fb05932f635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d815f26b889c44a2f1703cb59ddf9a5e426447df50ce91e240bc68f046b99465\",\"dweb:/ipfs/QmUTTNoty755VqS2jvZra7HrumCnRNkLcPRihs7W3s4Vj2\"]}},\"version\":1}",
  "bytecode": "0x610390610030600b82828239805160001a6073146000811461002057610022565bfe5b5030600052607381538281f300730000000000000000000000000000000000000000301460806040526004361061006d5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663799639d48114610072578063a6c9ac28146100cc578063b0c29c7414610103575b600080fd5b81801561007e57600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff6004358116906024351660443560643560ff6084351660a43560c43561013a565b604080519115158252519081900360200190f35b8180156100d857600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610252565b81801561010f57600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356102ec565b604080516000808252602080830180855288905260ff87168385015260608301869052608083018590529251909273ffffffffffffffffffffffffffffffffffffffff8a169260019260a08083019392601f19830192908190039091019087865af11580156101ad573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614151561023b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f7369676e61747572652f6861736820646f6573206e6f74206d61746368000000604482015290519081900360640190fd5b610246888888610252565b98975050505050505050565b604080517fcf8eeb7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052915160009286169163cf8eeb7e916044808301928692919082900301818387803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b506001979650505050505050565b604080517f21e5383a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905291516000928616916321e5383a916044808301928692919082900301818387803b1580156102ca57600080fd00a165627a7a72305820ce0c83cbde0134296040d5e1570692a0bfdaeb8cc1e5ffd172709274e6c216640029",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061006d5763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663799639d48114610072578063a6c9ac28146100cc578063b0c29c7414610103575b600080fd5b81801561007e57600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff6004358116906024351660443560643560ff6084351660a43560c43561013a565b604080519115158252519081900360200190f35b8180156100d857600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff60043581169060243516604435610252565b81801561010f57600080fd5b506100b873ffffffffffffffffffffffffffffffffffffffff600435811690602435166044356102ec565b604080516000808252602080830180855288905260ff87168385015260608301869052608083018590529251909273ffffffffffffffffffffffffffffffffffffffff8a169260019260a08083019392601f19830192908190039091019087865af11580156101ad573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614151561023b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f7369676e61747572652f6861736820646f6573206e6f74206d61746368000000604482015290519081900360640190fd5b610246888888610252565b98975050505050505050565b604080517fcf8eeb7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052915160009286169163cf8eeb7e916044808301928692919082900301818387803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b506001979650505050505050565b604080517f21e5383a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301526024820184905291516000928616916321e5383a916044808301928692919082900301818387803b1580156102ca57600080fd00a165627a7a72305820ce0c83cbde0134296040d5e1570692a0bfdaeb8cc1e5ffd172709274e6c216640029",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2840:54",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:54",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "73:109:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "160:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "169:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "172:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "162:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "162:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "162:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "96:5:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "107:5:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "114:42:54",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "103:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "103:54:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "93:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:65:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "86:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:73:54"
                  },
                  "nodeType": "YulIf",
                  "src": "83:93:54"
                }
              ]
            },
            "name": "validator_revert_contract_TokenStorage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:54",
                "type": ""
              }
            ],
            "src": "14:168:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:687:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "425:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "434:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "437:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "427:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "427:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "427:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "399:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "408:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "395:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "395:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "420:3:54",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "391:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "391:33:54"
                  },
                  "nodeType": "YulIf",
                  "src": "388:53:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "450:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "463:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "454:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "534:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "495:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "549:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "559:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "549:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "573:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "605:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "616:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "601:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "601:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "588:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "577:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "668:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "629:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "629:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "685:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "695:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "685:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "711:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "738:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "749:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "734:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "734:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "721:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "721:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "762:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "789:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "800:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "785:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "785:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "772:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "772:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "762:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "813:48:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "845:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "856:3:54",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "841:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "828:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "828:33:54"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "817:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "913:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "922:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "925:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "915:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "915:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "915:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value_2",
                            "nodeType": "YulIdentifier",
                            "src": "883:7:54"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value_2",
                                "nodeType": "YulIdentifier",
                                "src": "896:7:54"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "905:4:54",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "892:3:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "892:18:54"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "880:2:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "880:31:54"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "873:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "873:39:54"
                  },
                  "nodeType": "YulIf",
                  "src": "870:59:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:17:54",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "948:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "938:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "964:43:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "991:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1002:3:54",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "987:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "974:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:33:54"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "964:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1016:43:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1043:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1054:3:54",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1039:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1039:19:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1026:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:33:54"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "1016:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256t_bytes32t_uint8t_bytes32t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "296:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "307:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "319:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "327:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "335:6:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "343:6:54",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "351:6:54",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "359:6:54",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "367:6:54",
                "type": ""
              }
            ],
            "src": "187:878:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1173:92:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1195:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1206:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1191:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1191:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1183:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1225:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1250:6:54"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1243:6:54"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1243:14:54"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1236:6:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:22:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1218:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1218:41:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1218:41:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1142:9:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1153:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1164:4:54",
                "type": ""
              }
            ],
            "src": "1070:195:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:380:54",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1441:16:54",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:54",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1453:1:54",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:54"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:12:54"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1443:12:54"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1416:7:54"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:54"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1412:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1412:23:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1437:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1408:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1408:32:54"
                  },
                  "nodeType": "YulIf",
                  "src": "1405:52:54"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1466:36:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1492:9:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1479:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1479:23:54"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1470:5:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1550:5:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "1511:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1511:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1511:45:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1565:15:54",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1575:5:54"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1565:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1589:47:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1621:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1632:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1617:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1617:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1604:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:32:54"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1593:7:54",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1684:7:54"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_TokenStorage",
                      "nodeType": "YulIdentifier",
                      "src": "1645:38:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:47:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:47:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1701:17:54",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1711:7:54"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1701:6:54"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1727:42:54",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1754:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1765:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1750:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:18:54"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1737:12:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1737:32:54"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1727:6:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1345:9:54",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1356:7:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1368:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1376:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1384:6:54",
                "type": ""
              }
            ],
            "src": "1270:505:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1961:217:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1971:27:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1983:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1994:3:54",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1979:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:19:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1971:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2014:9:54"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2025:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2007:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:25:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:25:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2052:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2063:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2048:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2048:18:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2072:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2080:4:54",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2068:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2068:17:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2041:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2041:45:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2041:45:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2106:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2117:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2102:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2102:18:54"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2122:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2095:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2095:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2095:34:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2149:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:2:54",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2145:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:18:54"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "2165:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2138:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1906:9:54",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1917:6:54",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1925:6:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1933:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1941:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1952:4:54",
                "type": ""
              }
            ],
            "src": "1780:398:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:179:54",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:54",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:21:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:21:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:18:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:54",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2397:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:30:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2397:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2447:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2458:2:54",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:18:54"
                      },
                      {
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2463:31:54",
                        "type": "",
                        "value": "signature/hash does not match"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2436:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:59:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:59:54"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2504:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2516:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2527:2:54",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2512:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2512:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2504:4:54"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2334:9:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2348:4:54",
                "type": ""
              }
            ],
            "src": "2183:353:54"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2670:168:54",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2680:26:54",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2692:9:54"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2703:2:54",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2688:3:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:18:54"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2680:4:54"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2722:9:54"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2737:6:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2745:42:54",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2733:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:55:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2715:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2715:74:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2715:74:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2809:9:54"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2820:2:54",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2805:3:54"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2805:18:54"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2825:6:54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2798:6:54"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2798:34:54"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2798:34:54"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2631:9:54",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2642:6:54",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2650:6:54",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2661:4:54",
                "type": ""
              }
            ],
            "src": "2541:297:54"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_TokenStorage(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256t_bytes32t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_TokenStorage(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_TokenStorage(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(0, 0) }\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_contract$_TokenStorage_$4103t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_TokenStorage(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_contract_TokenStorage(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"signature/hash does not match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 54,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1034:1738:14:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "1034:1738:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2402:367;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2402:367:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1690:195:14;;;;;;;;;;;;;;1305:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1305:193:14;;;;;;;;;;;;;;2402:367;2639:21;;;2598:4;2639:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:4;;2639:29;;;;:21;;;;;;;;-1:-1:-1;;2639:21:14;;;;;;;;;;;2598:4;2639:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2639:21:14;;;;;;;;:29;;;2618:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2740:22;2745:2;2749:4;2755:6;2740:4;:22::i;:::-;2733:29;2402:367;-1:-1:-1;;;;;;;;2402:367:14:o;1690:195::-;1830:27;;;;;;:13;:27;;;;;;;;;;;;;;;1810:4;;1830:13;;;;;:27;;;;;1810:4;;1830:27;;;;;;;1810:4;1830:13;:27;;;5:2:-1;;;;30:1;27;20:12;5:2;1830:27:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;1874:4:14;;1690:195;-1:-1:-1;;;;;;;1690:195:14:o;1305:193::-;1445:25;;;;;;:13;:25;;;;;;;;;;;;;;;1425:4;;1445:13;;;;;:25;;;;;1425:4;;1445:25;;;;;;;1425:4;1445:13;:25;;;5:2:-1;;;;30:1;27;20:12",
  "source": "/**\n * Copyright 2019 Monerium ehf.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\npragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"./ERC20Lib.sol\";\nimport \"./TokenStorage.sol\";\n\n/**\n * @title Mintable token\n * @dev Simple ERC20 Token example, with mintable token creation\n * @dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\n * Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol\n */\n\nlibrary MintableTokenLib {\n\n    using SafeMath for uint;\n\n    /**\n     * @dev Mints new tokens.\n     * @param db Token storage to operate on.\n     * @param to The address that will recieve the minted tokens.\n     * @param amount The amount of tokens to mint.\n     */\n    function mint(\n        TokenStorage db,\n        address to,\n        uint amount\n    )\n        external\n        returns (bool)\n    {\n        db.addBalance(to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Burns tokens.\n     * @param db Token storage to operate on.\n     * @param from The address holding tokens.\n     * @param amount The amount of tokens to burn.\n     */\n    function burn(\n        TokenStorage db,\n        address from,\n        uint amount\n    )\n        public\n        returns (bool)\n    {\n        db.subBalance(from, amount);\n        return true;\n    }\n\n    /**\n     * @dev Burns tokens from a specific address.\n     * To burn the tokens the caller needs to provide a signature\n     * proving that the caller is authorized by the token owner to do so.\n     * @param db Token storage to operate on.\n     * @param from The address holding tokens.\n     * @param amount The amount of tokens to burn.\n     * @param h Hash which the token owner signed.\n     * @param v Signature component.\n     * @param r Signature component.\n     * @param s Sigature component.\n     */\n    function burn(\n        TokenStorage db,\n        address from,\n        uint amount,\n        bytes32 h,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    )\n        external\n        returns (bool)\n    {\n        require(\n            ecrecover(h, v, r, s) == from,\n            \"signature/hash does not match\"\n        );\n        return burn(db, from, amount);\n    }\n\n}\n",
  "sourcePath": "/Users/gislik/Code/smart-contracts/contracts/MintableTokenLib.sol",
  "ast": {
    "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/MintableTokenLib.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ERC20Basic": [
        4899
      ],
      "ERC20Lib": [
        1751
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "MintableTokenLib": [
        818
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ],
      "SafeMath": [
        1341
      ],
      "TokenStorage": [
        4103
      ],
      "TokenStorageLib": [
        4270
      ]
    },
    "id": 819,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 731,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "599:23:14"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 732,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 2676,
        "src": "624:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/ERC20Lib.sol",
        "file": "./ERC20Lib.sol",
        "id": 733,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 347,
        "src": "684:24:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/TokenStorage.sol",
        "file": "./TokenStorage.sol",
        "id": 734,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 2235,
        "src": "709:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Mintable token\n@dev Simple ERC20 Token example, with mintable token creation\n@dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\nBased on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol",
        "fullyImplemented": true,
        "id": 818,
        "linearizedBaseContracts": [
          818
        ],
        "name": "MintableTokenLib",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 737,
            "libraryName": {
              "contractScope": null,
              "id": 735,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2675,
              "src": "1072:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2675",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1066:24:14",
            "typeName": {
              "id": 736,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1085:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1435:63:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1459:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "1463:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1445:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2157,
                      "src": "1445:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:25:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1487:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 747,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "1480:11:14"
                }
              ]
            },
            "documentation": "@dev Mints new tokens.\n@param db Token storage to operate on.\n@param to The address that will recieve the minted tokens.\n@param amount The amount of tokens to mint.",
            "id": 758,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1328:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 738,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "1328:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1353:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1373:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:72:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1425:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1424:6:14"
            },
            "scope": 818,
            "src": "1305:193:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "1820:65:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 772,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "1844:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "1850:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 769,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "1830:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2174,
                      "src": "1830:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1874:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 768,
                  "id": 777,
                  "nodeType": "Return",
                  "src": "1867:11:14"
                }
              ]
            },
            "documentation": "@dev Burns tokens.\n@param db Token storage to operate on.\n@param from The address holding tokens.\n@param amount The amount of tokens to burn.",
            "id": 779,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1713:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 759,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "1713:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1738:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1760:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:74:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1810:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1809:6:14"
            },
            "scope": 818,
            "src": "1690:195:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "2608:161:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 800,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "2649:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 801,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "2652:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 802,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "2655:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 803,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "2658:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 799,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3185,
                            "src": "2639:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 805,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "2664:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2639:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:31:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        },
                        "value": "signature/hash does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3196,
                        3197
                      ],
                      "referencedDeclaration": 3197,
                      "src": "2618:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:105:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "2745:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "2749:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 813,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "2755:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 810,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "2740:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenStorage_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract TokenStorage,address,uint256) returns (bool)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 797,
                  "id": 815,
                  "nodeType": "Return",
                  "src": "2733:29:14"
                }
              ]
            },
            "documentation": "@dev Burns tokens from a specific address.\nTo burn the tokens the caller needs to provide a signature\nproving that the caller is authorized by the token owner to do so.\n@param db Token storage to operate on.\n@param from The address holding tokens.\n@param amount The amount of tokens to burn.\n@param h Hash which the token owner signed.\n@param v Signature component.\n@param r Signature component.\n@param s Sigature component.",
            "id": 817,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2425:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 780,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "2425:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2450:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2472:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "name": "h",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2493:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2512:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2529:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2548:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2415:148:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2598:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2597:6:14"
            },
            "scope": 818,
            "src": "2402:367:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 819,
        "src": "1034:1738:14"
      }
    ],
    "src": "599:2174:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/MintableTokenLib.sol",
    "exportedSymbols": {
      "CanReclaimToken": [
        4325
      ],
      "Claimable": [
        4383
      ],
      "ERC20Basic": [
        4899
      ],
      "ERC20Lib": [
        1751
      ],
      "HasNoContracts": [
        4412
      ],
      "HasNoEther": [
        4455
      ],
      "HasNoTokens": [
        4482
      ],
      "MintableTokenLib": [
        818
      ],
      "NoOwner": [
        4495
      ],
      "Ownable": [
        4589
      ],
      "SafeERC20": [
        4923
      ],
      "SafeMath": [
        1341
      ],
      "TokenStorage": [
        4103
      ],
      "TokenStorageLib": [
        4270
      ]
    },
    "id": 819,
    "license": "apache-2.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 731,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "599:23:14"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 732,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 2676,
        "src": "624:59:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/ERC20Lib.sol",
        "file": "./ERC20Lib.sol",
        "id": 733,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 347,
        "src": "684:24:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/gislik/Code/smart-contracts/contracts/TokenStorage.sol",
        "file": "./TokenStorage.sol",
        "id": 734,
        "nodeType": "ImportDirective",
        "scope": 819,
        "sourceUnit": 2235,
        "src": "709:28:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Mintable token\n@dev Simple ERC20 Token example, with mintable token creation\n@dev Issue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120\nBased on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol",
        "fullyImplemented": true,
        "id": 818,
        "linearizedBaseContracts": [
          818
        ],
        "name": "MintableTokenLib",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 737,
            "libraryName": {
              "contractScope": null,
              "id": 735,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2675,
              "src": "1072:8:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2675",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1066:24:14",
            "typeName": {
              "id": 736,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1085:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 757,
              "nodeType": "Block",
              "src": "1435:63:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 741,
                        "src": "1459:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "1463:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 748,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "1445:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2157,
                      "src": "1445:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:25:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:25:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1487:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 747,
                  "id": 756,
                  "nodeType": "Return",
                  "src": "1480:11:14"
                }
              ]
            },
            "documentation": "@dev Mints new tokens.\n@param db Token storage to operate on.\n@param to The address that will recieve the minted tokens.\n@param amount The amount of tokens to mint.",
            "id": 758,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 739,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1328:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 738,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "1328:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 741,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1353:10:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1373:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1373:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1318:72:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 746,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 758,
                  "src": "1425:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1425:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1424:6:14"
            },
            "scope": 818,
            "src": "1305:193:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "1820:65:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 772,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 762,
                        "src": "1844:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 764,
                        "src": "1850:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 769,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 760,
                        "src": "1830:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      "id": 771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "subBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2174,
                      "src": "1830:13:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:27:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "1830:27:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1874:4:14",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 768,
                  "id": 777,
                  "nodeType": "Return",
                  "src": "1867:11:14"
                }
              ]
            },
            "documentation": "@dev Burns tokens.\n@param db Token storage to operate on.\n@param from The address holding tokens.\n@param amount The amount of tokens to burn.",
            "id": 779,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 760,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1713:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 759,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "1713:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 762,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1738:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1738:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 764,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1760:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 763,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1760:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1703:74:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1810:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1810:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1809:6:14"
            },
            "scope": 818,
            "src": "1690:195:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "2608:161:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 800,
                              "name": "h",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "2649:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 801,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 789,
                              "src": "2652:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 802,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 791,
                              "src": "2655:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 803,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "2658:1:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 799,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3185,
                            "src": "2639:9:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2639:21:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 805,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 783,
                          "src": "2664:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2639:29:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7369676e61747572652f6861736820646f6573206e6f74206d61746368",
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2682:31:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        },
                        "value": "signature/hash does not match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e83ec76705e7e828416b76faef198c2c4f74e79f7ed646d650be22a2b7497ab",
                          "typeString": "literal_string \"signature/hash does not match\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3196,
                        3197
                      ],
                      "referencedDeclaration": 3197,
                      "src": "2618:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:105:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:105:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 781,
                        "src": "2745:2:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "2749:4:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 813,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 785,
                        "src": "2755:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TokenStorage_$2234",
                          "typeString": "contract TokenStorage"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 810,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 779,
                      "src": "2740:4:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_TokenStorage_$2234_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (contract TokenStorage,address,uint256) returns (bool)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2740:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 797,
                  "id": 815,
                  "nodeType": "Return",
                  "src": "2733:29:14"
                }
              ]
            },
            "documentation": "@dev Burns tokens from a specific address.\nTo burn the tokens the caller needs to provide a signature\nproving that the caller is authorized by the token owner to do so.\n@param db Token storage to operate on.\n@param from The address holding tokens.\n@param amount The amount of tokens to burn.\n@param h Hash which the token owner signed.\n@param v Signature component.\n@param r Signature component.\n@param s Sigature component.",
            "id": 817,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 781,
                  "name": "db",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2425:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenStorage_$2234",
                    "typeString": "contract TokenStorage"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 780,
                    "name": "TokenStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2234,
                    "src": "2425:12:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenStorage_$2234",
                      "typeString": "contract TokenStorage"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 783,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2450:12:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2450:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 785,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2472:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 787,
                  "name": "h",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2493:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "name": "v",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2512:7:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:5:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 791,
                  "name": "r",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2529:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "name": "s",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2548:9:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2415:148:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 796,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2598:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2597:6:14"
            },
            "scope": 818,
            "src": "2402:367:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 819,
        "src": "1034:1738:14"
      }
    ],
    "src": "599:2174:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "137": {
      "events": {},
      "links": {},
      "address": "0x75494B8dB02E05E5A06a714B8D6AB461a370Ce0b",
      "transactionHash": "0x6a6b16cbab07c8f7f2908f5df3f0e03990f943b2830f69c32bc24409f9571e35"
    },
    "1": {
      "events": {},
      "links": {},
      "address": "0x3fd2c5067da1f41cf16d8a0230efacbb7369d53f",
      "transactionHash": "0x093431505f78f4bbab808242ba5e8a5ecb1889d4c33fb6fae49fb6dc73bbb75a"
    },
    "3": {
      "events": {},
      "links": {},
      "address": "0x6afd70e54a3644197e76be4d57e23f5841f7344c",
      "transactionHash": "0xaf5d75853e3b03dd454f1305685c05460b4cb0e98dc5901dce8570fc8ea592e6"
    },
    "4": {
      "events": {},
      "links": {},
      "address": "0xbe78ec9ae729f89b526d86b1628b8d3f90e9ba84",
      "transactionHash": "0x1b5340c88c36472ccb51bb7b33507a9965a6136076e2be94ff3725aff3ba4929"
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0xf93cb1a85db47fbd2e4b09ef7bdb3928eccddc54",
      "transactionHash": "0xb0508c69e083115b22e19f1bc13d2fc7c12c953411bb772586c132a42cdcef51"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2020-01-08T13:39:11.537Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Simple ERC20 Token example, with mintable token creationIssue: * https://github.com/OpenZeppelin/openzeppelin-solidity/issues/120 Based on code by TokenMarketNet: https://github.com/TokenMarketNet/ico/blob/master/contracts/MintableToken.sol",
    "kind": "dev",
    "methods": {
      "burn(TokenStorage,address,uint256)": {
        "details": "Burns tokens.",
        "params": {
          "amount": "The amount of tokens to burn.",
          "db": "Token storage to operate on.",
          "from": "The address holding tokens."
        }
      },
      "burn(TokenStorage,address,uint256,bytes32,uint8,bytes32,bytes32)": {
        "details": "Burns tokens from a specific address. To burn the tokens the caller needs to provide a signature proving that the caller is authorized by the token owner to do so.",
        "params": {
          "amount": "The amount of tokens to burn.",
          "db": "Token storage to operate on.",
          "from": "The address holding tokens.",
          "h": "Hash which the token owner signed.",
          "r": "Signature component.",
          "s": "Sigature component.",
          "v": "Signature component."
        }
      },
      "mint(TokenStorage,address,uint256)": {
        "details": "Mints new tokens.",
        "params": {
          "amount": "The amount of tokens to mint.",
          "db": "Token storage to operate on.",
          "to": "The address that will recieve the minted tokens."
        }
      }
    },
    "title": "Mintable token",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
